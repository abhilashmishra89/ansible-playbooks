- name: create a VPC with default(or dedicated) tenancy and a couple of tags
  hosts: localhost
################################AWS seperate infra for new customer #######################
  tasks:
  - name: create a VPC
    ec2_vpc_net:
      name: VPC-Ansible
# Uncomment the below line to delete infrastructure
      cidr_block: 10.10.0.0/16
      region: ap-northeast-1
      tags:
        module: ec2_vpc_net
        this: works
      tenancy: default
    register: vpc

  - name: create IGW
    ec2_vpc_igw:
      vpc_id: '{{vpc.vpc.id}}'
      state: present
      tags:
        Name: IGW-Ansible
    register: igw


  - name: create Private1
    ec2_vpc_subnet:
      vpc_id: '{{vpc.vpc.id}}'
      state: present
      cidr: 10.10.1.0/24
      az: ap-northeast-1a 
      tags:
        Name: Private1-Ansible
    register: private1
  - name: create Private2
    ec2_vpc_subnet:
      vpc_id: '{{vpc.vpc.id}}'
      state: present
      cidr: 10.10.2.0/24
      az: ap-northeast-1c
      tags:
        Name: Private2-Ansible
    register: private2
  - name: create Public0
    ec2_vpc_subnet:
      vpc_id: '{{vpc.vpc.id}}'
      state: present
      cidr: 10.10.0.0/24
      az: ap-northeast-1d
      tags:
        Name: Public0-Ansible
    register: public0

  - name: Ansible-Public-RT
    ec2_vpc_route_table:
      vpc_id: '{{vpc.vpc.id}}'
      region: ap-northeast-1
      tags:
        Name: Ansible-Public-RT
      subnets:
        - "{{ public0.subnet.id }}"
      routes:
        - dest: 0.0.0.0/0
          gateway_id: "{{ igw.gateway_id }}"
    register: public_route_table
  - name: Ansible-Private-RT
    ec2_vpc_route_table:
      vpc_id: '{{vpc.vpc.id}}'
      region: ap-northeast-1
      tags:
        Name: Ansible-Private-RT
      subnets:
        - "{{ private1.subnet.id }}"
        - "{{ private2.subnet.id }}"
      routes:
        - dest: 10.10.0.0/16


########### Application related infra below ###############
  - name: create security group
    ec2_group:
      name: dmz
      vpc_id: '{{vpc.vpc.id}}'
      description: an example ec2 group
      region: ap-northeast-1
      rules:
        - proto: tcp
          from_port: 80
          to_port: 80
          cidr_ip: 0.0.0.0/0
    register: group
  - name: create RDS subnet group
    rds_subnet_group:
     state: present
     name: my_rds_subnets
     description: my_description
     region: ap-northeast-1
     subnets:
       - "{{ private1.subnet.id }}"
       - "{{ private2.subnet.id }}"


  - name: create RDS instance
    rds:
     command: create
     subnet: my_rds_subnets
     instance_name: dbserver-1
     db_engine: MySQL
     size: 20
     instance_type: db.t2.micro
     username: mysql_admin
     password: 1nsecure
     region: ap-northeast-1
     backup_retention: 0
     multi_zone: no
     tags:
       Environment: testing
       Application: cms
    register: group

  - name: create ec2 instance
    ec2:
      image: ami-079e6fb1e856e80c1
      vpc_subnet_id: '{{public0.subnet.id}}'
      wait: yes
      instance_type: t2.micro
      region: ap-northeast-1
      assign_public_ip: yes
      key_name: nodeapp
      instance_tags:
        Name: appserver
      count_tag:
        Name: appserver
      exact_count: 1

